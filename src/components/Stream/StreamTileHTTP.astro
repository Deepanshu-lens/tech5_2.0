---
const { url } = Astro.props;
console.log("URL ", url);
---

<script>
    async function sendPostRequest() {
        const pc = new RTCPeerConnection({
            iceServers: [{ urls: "stun:stun.l.google.com:19302" }], // STUN server
        });
        pc.addTransceiver("video", { direction: "recvonly" });
        let iceCandidates: any[] = [];
        pc.onicecandidate = (event) => {
            if (
                event.candidate &&
                event.candidate.protocol === "udp" &&
                event.candidate.candidate.indexOf(" udp ") > 0
            ) {
                console.log("New ICE candidate:", event.candidate);
                iceCandidates.push(event.candidate.toJSON().candidate);
            } else {
                console.log("All ICE candidates have been gathered.");
                var results: { [key: string]: string[] } = {};
                const regexPatterns = {
                    session_ids: /o=- (\d+) (\d+) IN IP4/,
                    fingerprint: /fingerprint:sha-256 ([A-F0-9:]+)/,
                    ice_ufrag: /ice-ufrag:(\S+)/,
                    ice_pwd: /ice-pwd:(\S+)/,
                    ssrc: /ssrc:(\d+)/,
                };
                for (const key in regexPatterns) {
                    const regex =
                        regexPatterns[key as keyof typeof regexPatterns];
                    const match = pc.localDescription?.sdp?.match(regex);
                    if (match) {
                        results[key] = match.slice(1); // Capture groups
                    }
                }
                fetch("http://18.221.34.208:8449/webrtcCall", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        cameraId: "h2c3j3kn1erul8y",
                        offer: results,
                        candidates: iceCandidates,
                        startTime: new Date().toISOString(),
                    }),
                }).then(async (response) => {
                    const resp = await response.json();
                    console.log("Response: ", resp);
                });
            }
        };

        const offer = await pc.createOffer();

        await pc.setLocalDescription(offer).then(() => {
            console.log("Offer from pc1", pc.localDescription);
        });
    }
    if (typeof window !== "undefined" && "RTCPeerConnection" in window) {
        document.addEventListener("DOMContentLoaded", () => {
            sendPostRequest();
        });
    }
</script>

<div data-url={url} class="w-full h-full relative animate-pulse bg-red-500">
</div>